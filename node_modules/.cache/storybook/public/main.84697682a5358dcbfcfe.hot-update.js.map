{"version":3,"file":"main.84697682a5358dcbfcfe.hot-update.js","mappings":";;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5BA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;;AAEA;AACA;AACA;AAFA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7BA;AACA;AACA;AAEA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAQA;;AAVA;AAYA;AACA;AACA;AACA;AAHA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzBA;AA4BA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA","sources":["webpack://chat-ui/./src/assets/icon/bubbleTip.svg","webpack://chat-ui/./src/components/ChatBubble/chatBubble.stories.js","webpack://chat-ui/./src/components/ChatBubble/index.js","webpack://chat-ui/./src/components/ChatBubble/style.js"],"sourcesContent":["var _path;\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\n\nfunction SvgBubbleTip(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 29,\n    height: 16,\n    viewBox: \"0 0 29 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8.48799 1.14592C8.16527 2.53004 6.72888 6.53762 0.510644 10.9194C0.190634 11.145 0.0337882 11.5382 0.110928 11.9222C0.188085 12.3061 0.484537 12.6083 0.866706 12.6929C0.901367 12.7005 1.73407 12.8823 3.2305 13.0133C7.49745 13.3866 16.2914 13.3021 27.4453 8.58744C28.2641 8.70295 4.37803 -1.82241 8.48799 1.14592Z\",\n    fill: \"white\"\n  })));\n}\n\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgBubbleTip);\nexport default __webpack_public_path__ + \"static/media/bubbleTip.51054e82a7a94cd345356da8c96737c1.svg\";\nexport { ForwardRef as ReactComponent };","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from \\\"react\\\";\\nimport ChatBubble from \\\".\\\";\\n\\nexport default {\\n  title: \\\"UI 组件/ChatBubble\\\",\\n  component: ChatBubble\\n};\\n\\nexport const FromOthers = () => (\\n  <ChatBubble time=\\\"昨天 下午14：26\\\">这是一条其它人发送的聊天消息</ChatBubble>\\n);\\n\\nexport const Mine = () => (\\n  <ChatBubble type=\\\"mine\\\" time=\\\"昨天 下午16：30\\\">\\n    这是一条我自己发送的聊天消息\\n  </ChatBubble>\\n);\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"FromOthers\":{\"startLoc\":{\"col\":26,\"line\":9},\"endLoc\":{\"col\":1,\"line\":11},\"startBody\":{\"col\":26,\"line\":9},\"endBody\":{\"col\":1,\"line\":11}},\"Mine\":{\"startLoc\":{\"col\":20,\"line\":13},\"endLoc\":{\"col\":1,\"line\":17},\"startBody\":{\"col\":20,\"line\":13},\"endBody\":{\"col\":1,\"line\":17}}};\n    \nimport React from \"react\";\nimport ChatBubble from \".\";\n\nexport default {\n  title: \"UI 组件/ChatBubble\",\n  component: ChatBubble\n};\n\nexport const FromOthers = () => (\n  <ChatBubble time=\"昨天 下午14：26\">这是一条其它人发送的聊天消息</ChatBubble>\n);;\n\nexport const Mine = () => (\n  <ChatBubble type=\"mine\" time=\"昨天 下午16：30\">\n    这是一条我自己发送的聊天消息\n  </ChatBubble>\n);\n\n\n\nFromOthers.parameters = { storySource: { source: \"() => (\\n  <ChatBubble time=\\\"昨天 下午14：26\\\">这是一条其它人发送的聊天消息</ChatBubble>\\n)\" }, ...FromOthers.parameters };\nMine.parameters = { storySource: { source: \"() => (\\n  <ChatBubble type=\\\"mine\\\" time=\\\"昨天 下午16：30\\\">\\n    这是一条我自己发送的聊天消息\\n  </ChatBubble>\\n)\" }, ...Mine.parameters };","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport StyledChatBubble, { Bubble, BubbleTip, Time, MessageText, } from \"./style\";\n\nimport { ReactComponent as BubbleTipIcon } from \"assets/icon/bubbleTip.svg\";\n\nfunction ChatBubble({ children, type, time, ...rest }) {\n  return (\n    <StyledChatBubble type={type} {...rest}>\n      <Bubble>\n        <BubbleTip icon={BubbleTipIcon} width={40} height={28} color=\"white\" />\n        <MessageText>{children}</MessageText>\n      </Bubble>\n      <Time>{time}</Time>\n    </StyledChatBubble>\n  );\n}\n\nChatBubble.propTypes = {\n  children: PropTypes.any,\n  type: PropTypes.oneOf([\"mine\"]),\n  time: PropTypes.string,\n};\n\nexport default ChatBubble;\n","import styled, { css } from \"styled-components\";\nimport Paragraph from \"components/Paragraph\";\nimport Icon from \"components/Icon\";\nimport Text from \"components/Text\";\n\nconst Time = styled(Paragraph).attrs({ type: \"secondary\", size: \"small\" })`\n    margin: 6px;\n    margin-left: 24px;\n    word-spacing: 1rem;\n`;\n\nconst BubbleTip = styled(Icon)`\n    position: absolute;\n    bottom: -15%;\n    left: 0;\n    z-index: 5;\n`;\n\nconst Bubble = styled.div`\n    padding: 15px 22px;\n    box-shadow: 0px 8px 24px rgba(0, 0, 0, 0.1);\n    border-radius: 100px;\n    position: relative;\n    z-index: 10;\n`;\n\nconst MessageText = styled(Text)``;\n\nconst typeVariants = {\n    mine: css`\n      ${Bubble} {\n        background-color: ${({ theme }) => theme.primaryColor};\n      }\n  \n      ${BubbleTip} {\n        transform: rotateY(180deg);\n        left: unset;\n        right: 0;\n  \n        path {\n          fill: ${({ theme }) => theme.primaryColor};\n        }\n      }\n  \n      ${Time} {\n        text-align: right;\n        margin-left: 0;\n        margin-right: 24px;\n      }\n  \n      ${MessageText} {\n        color: white;\n      }\n    `,\n};\n\nconst StyledChatBubble = styled.div`\n    display: flex;\n    flex-direction: column;\n    ${({ type }) => type && typeVariants[type]}\n`;\n\nexport default StyledChatBubble;\nexport { Bubble, BubbleTip, Time, MessageText };"],"names":[],"sourceRoot":""}