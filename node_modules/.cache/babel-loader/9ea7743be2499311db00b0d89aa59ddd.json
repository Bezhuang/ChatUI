{"ast":null,"code":"import styled, { css } from 'styled-components';\n\nconst circleMixinFunc = function (color) {\n  let size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"8px\";\n  return css`\n    content: \"\";\n    display: block;\n    position: absolute;\n    ${circle(color, size)}\n`;\n};\n\nconst StyledAvatar = styled.div`\n    position: relative;\n`;\nconst StatusIcon = styled.div`\n    position: absolute;\n    left: 2px;\n    top: 4px;\n\n    &::before {\n        ${_ref => {\n  let {\n    size\n  } = _ref;\n  return circleMixinFunc(\"white\", size);\n}}\n        transform: scale(2);\n    }\n\n    &::after {\n        ${_ref2 => {\n  let {\n    theme,\n    status,\n    size\n  } = _ref2;\n\n  if (status === \"online\") {\n    return circleMixinFunc(theme.green, size);\n  } else if (status === \"offline\") {\n    return circleMixinFunc(theme.gray, size);\n  }\n}}\n    }\n`;\nconst AvatarClip = styled.div`\n    width: ${_ref3 => {\n  let {\n    size\n  } = _ref3;\n  return size;\n}};\n    height: ${_ref4 => {\n  let {\n    size\n  } = _ref4;\n  return size;\n}};\n    border-radius: 50%;\n    overflow: hidden;\n`;\nconst AvatarImage = styled.img`\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    object-position: center;\n`;\nexport default StyledAvatar;\nexport { StatusIcon, AvatarClip, AvatarImage };","map":{"version":3,"names":["styled","css","circleMixinFunc","color","size","circle","StyledAvatar","div","StatusIcon","theme","status","green","gray","AvatarClip","AvatarImage","img"],"sources":["/Users/zhihaozhuang/Github/ChatUI/src/components/Avatar/style.js"],"sourcesContent":["import styled, { css } from 'styled-components';\n\nconst circleMixinFunc = (color, size = \"8px\") => css`\n    content: \"\";\n    display: block;\n    position: absolute;\n    ${circle(color, size)}\n`;\n\nconst StyledAvatar = styled.div`\n    position: relative;\n`;\n\nconst StatusIcon = styled.div`\n    position: absolute;\n    left: 2px;\n    top: 4px;\n\n    &::before {\n        ${({ size }) => circleMixinFunc(\"white\", size)}\n        transform: scale(2);\n    }\n\n    &::after {\n        ${({ theme, status, size }) => {\n        if (status === \"online\") {\n            return circleMixinFunc(theme.green, size);\n        } else if (status === \"offline\") {\n            return circleMixinFunc(theme.gray, size);\n        }\n    }}\n    }\n`;\n\nconst AvatarClip = styled.div`\n    width: ${({ size }) => size};\n    height: ${({ size }) => size};\n    border-radius: 50%;\n    overflow: hidden;\n`;\n\nconst AvatarImage = styled.img`\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    object-position: center;\n`;\n\nexport default StyledAvatar;\nexport { StatusIcon, AvatarClip, AvatarImage };\n"],"mappings":"AAAA,OAAOA,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;;AAEA,MAAMC,eAAe,GAAG,UAACC,KAAD;EAAA,IAAQC,IAAR,uEAAe,KAAf;EAAA,OAAyBH,GAAI;AACrD;AACA;AACA;AACA,MAAMI,MAAM,CAACF,KAAD,EAAQC,IAAR,CAAc;AAC1B,CALwB;AAAA,CAAxB;;AAOA,MAAME,YAAY,GAAGN,MAAM,CAACO,GAAI;AAChC;AACA,CAFA;AAIA,MAAMC,UAAU,GAAGR,MAAM,CAACO,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA,UAAU;EAAA,IAAC;IAAEH;EAAF,CAAD;EAAA,OAAcF,eAAe,CAAC,OAAD,EAAUE,IAAV,CAA7B;AAAA,CAA6C;AACvD;AACA;AACA;AACA;AACA,UAAU,SAA6B;EAAA,IAA5B;IAAEK,KAAF;IAASC,MAAT;IAAiBN;EAAjB,CAA4B;;EAC/B,IAAIM,MAAM,KAAK,QAAf,EAAyB;IACrB,OAAOR,eAAe,CAACO,KAAK,CAACE,KAAP,EAAcP,IAAd,CAAtB;EACH,CAFD,MAEO,IAAIM,MAAM,KAAK,SAAf,EAA0B;IAC7B,OAAOR,eAAe,CAACO,KAAK,CAACG,IAAP,EAAaR,IAAb,CAAtB;EACH;AACJ,CAAC;AACN;AACA,CAnBA;AAqBA,MAAMS,UAAU,GAAGb,MAAM,CAACO,GAAI;AAC9B,aAAa;EAAA,IAAC;IAAEH;EAAF,CAAD;EAAA,OAAcA,IAAd;AAAA,CAAmB;AAChC,cAAc;EAAA,IAAC;IAAEA;EAAF,CAAD;EAAA,OAAcA,IAAd;AAAA,CAAmB;AACjC;AACA;AACA,CALA;AAOA,MAAMU,WAAW,GAAGd,MAAM,CAACe,GAAI;AAC/B;AACA;AACA;AACA;AACA,CALA;AAOA,eAAeT,YAAf;AACA,SAASE,UAAT,EAAqBK,UAArB,EAAiCC,WAAjC"},"metadata":{},"sourceType":"module"}